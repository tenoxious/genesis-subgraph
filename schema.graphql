type Mana @entity {
  id: ID!
  lootTokenId: Bag
  itemName: String!
  itemGreatness: Int!
  itemClass: String!
  itemRank: Int!
  suffixId: Order!
  inventoryId: Int!
  currentOwner: Wallet!
  minted: BigInt!
  tokenURI: String!
  OGMinterAddress: Bytes!
}

type Adventurer @entity {
  id: ID!
  chest: String!
  foot: String!
  hand: String!
  head: String!
  neck: String!
  ring: String!
  waist: String!
  weapon: String!
  order: String!
  suffixId: Order!
  orderColor: String!
  orderCount: String!
  currentOwner: Wallet!
  minted: BigInt!
  tokenURI: String!
  OGMinterAddress: Bytes!
  chestGM: Mana!
  footGM: Mana!
  handGM: Mana!
  headGM: Mana!
  neckGM: Mana!
  ringGM: Mana!
  waistGM: Mana!
  weaponGM: Mana!
}

type Order @entity {
  id: ID!
  manas: [Mana!]! @derivedFrom(field: "suffixId")
  manasHeld: BigInt!
  adventurers: [Adventurer!]! @derivedFrom(field: "suffixId")
  adventurersHeld: BigInt!
}

type Bag @entity {
  id: ID!
  chest: String!
  foot: String!
  hand: String!
  head: String!
  neck: String!
  ring: String!
  waist: String!
  weapon: String!
  chestSuffixId: Int!
  footSuffixId: Int!
  handSuffixId: Int!
  headSuffixId: Int!
  neckSuffixId: Int!
  ringSuffixId: Int!
  waistSuffixId: Int!
  weaponSuffixId: Int!
  currentOwner: Wallet!
  minted: BigInt!
  manas: [Mana!]! @derivedFrom(field: "lootTokenId")
  manasClaimed: BigInt!
  manasUnclaimed: BigInt!
  manasTotalCount: BigInt!
}

type Wallet @entity {
  id: ID!
  address: Bytes!
  manas: [Mana!] @derivedFrom(field: "currentOwner")
  bags: [Bag!] @derivedFrom(field: "currentOwner")
  adventurers: [Adventurer!] @derivedFrom(field: "currentOwner")
  manasHeld: BigInt!
  bagsHeld: BigInt!
  adventurersHeld: BigInt!
  joined: BigInt!
}

type Transfer @entity {
  id: ID!
  mana: Mana
  bag: Bag
  adventurer: Adventurer
  from: Wallet!
  to: Wallet!
  txHash: Bytes!
  timestamp: BigInt!
}
